{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"password-input\"\n};\nconst _hoisted_8 = [\"type\"];\nconst _hoisted_9 = {\n  class: \"password-requirements\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = [\"type\"];\nconst _hoisted_12 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, \"用户注册\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[9] || (_cache[9] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名：\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event),\n    placeholder: \"请输入用户名\",\n    onInput: _cache[1] || (_cache[1] = $event => $options.validateField('username'))\n  }, null, 544), [[_vModelText, $data.form.username]]), $data.errorMessages.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.errorMessages.username), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_4, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"邮箱：\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.email = $event),\n    placeholder: \"请输入邮箱\",\n    onInput: _cache[3] || (_cache[3] = $event => $options.validateField('email'))\n  }, null, 544), [[_vModelText, $data.form.email]]), $data.errorMessages.email ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.errorMessages.email), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_6, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码：\", -1)), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showPassword ? 'text' : 'password',\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.password = $event),\n    placeholder: \"请输入密码\",\n    onInput: _cache[5] || (_cache[5] = $event => $options.validateField('password'))\n  }, null, 40, _hoisted_8), [[_vModelDynamic, $data.form.password]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"toggle-password\",\n    onClick: _cache[6] || (_cache[6] = $event => $data.showPassword = !$data.showPassword)\n  }, _toDisplayString($data.showPassword ? '隐藏' : '显示'), 1)]), _createElementVNode(\"div\", _hoisted_9, [_cache[12] || (_cache[12] = _createTextVNode(\" 密码要求： \")), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", {\n    class: _normalizeClass({\n      valid: $options.hasLowerCase\n    })\n  }, \"至少一个小写字母\", 2), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      valid: $options.hasUpperCase\n    })\n  }, \"至少一个大写字母\", 2), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      valid: $options.hasNumber\n    })\n  }, \"至少一个数字\", 2), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      valid: $options.hasMinLength\n    })\n  }, \"至少6位字符\", 2)])])]), _createElementVNode(\"div\", _hoisted_10, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"确认密码：\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: $data.showPassword ? 'text' : 'password',\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.form.confirmPassword = $event),\n    placeholder: \"请再次输入密码\",\n    onInput: _cache[8] || (_cache[8] = $event => $options.validateField('confirmPassword'))\n  }, null, 40, _hoisted_11), [[_vModelDynamic, $data.form.confirmPassword]]), $data.errorMessages.confirmPassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString($data.errorMessages.confirmPassword), 1)) : _createCommentVNode(\"\", true)]), _cache[15] || (_cache[15] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-btn\"\n  }, \"立即注册\", -1))], 32)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleRegister","_hoisted_2","for","type","id","$event","$data","form","username","placeholder","onInput","validateField","errorMessages","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","email","_hoisted_5","_hoisted_6","_hoisted_7","showPassword","password","_hoisted_8","onClick","_hoisted_9","_createTextVNode","_normalizeClass","valid","hasLowerCase","hasUpperCase","hasNumber","hasMinLength","_hoisted_10","confirmPassword","_hoisted_11","_hoisted_12"],"sources":["C:\\my-project\\src\\pages\\create\\CreatePage.vue"],"sourcesContent":["<template>\r\n    <div class=\"register-container\">\r\n      <h2>用户注册</h2>\r\n      <form @submit.prevent=\"handleRegister\">\r\n        <!-- 用户名 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">用户名：</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            v-model=\"form.username\"\r\n            placeholder=\"请输入用户名\"\r\n            @input=\"validateField('username')\"\r\n          />\r\n          <div v-if=\"errorMessages.username\" class=\"error-message\">\r\n            {{ errorMessages.username }}\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- 邮箱 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">邮箱：</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"form.email\"\r\n            placeholder=\"请输入邮箱\"\r\n            @input=\"validateField('email')\"\r\n          />\r\n          <div v-if=\"errorMessages.email\" class=\"error-message\">\r\n            {{ errorMessages.email }}\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- 密码 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">密码：</label>\r\n          <div class=\"password-input\">\r\n            <input\r\n              :type=\"showPassword ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              v-model=\"form.password\"\r\n              placeholder=\"请输入密码\"\r\n              @input=\"validateField('password')\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"toggle-password\"\r\n              @click=\"showPassword = !showPassword\"\r\n            >\r\n              {{ showPassword ? '隐藏' : '显示' }}\r\n            </button>\r\n          </div>\r\n          <div class=\"password-requirements\">\r\n            密码要求：\r\n            <ul>\r\n              <li :class=\"{ valid: hasLowerCase }\">至少一个小写字母</li>\r\n              <li :class=\"{ valid: hasUpperCase }\">至少一个大写字母</li>\r\n              <li :class=\"{ valid: hasNumber }\">至少一个数字</li>\r\n              <li :class=\"{ valid: hasMinLength }\">至少6位字符</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- 确认密码 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">确认密码：</label>\r\n          <input\r\n            :type=\"showPassword ? 'text' : 'password'\"\r\n            id=\"confirmPassword\"\r\n            v-model=\"form.confirmPassword\"\r\n            placeholder=\"请再次输入密码\"\r\n            @input=\"validateField('confirmPassword')\"\r\n          />\r\n          <div v-if=\"errorMessages.confirmPassword\" class=\"error-message\">\r\n            {{ errorMessages.confirmPassword }}\r\n          </div>\r\n        </div>\r\n  \r\n        <button type=\"submit\" class=\"submit-btn\">立即注册</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'CreatePage',\r\n    data() {\r\n      return {\r\n        form: {\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        },\r\n        errorMessages: {\r\n          username: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: ''\r\n        },\r\n        showPassword: false\r\n      }\r\n    },\r\n    computed: {\r\n      // 密码复杂度验证\r\n      hasLowerCase() {\r\n        return /[a-z]/.test(this.form.password)\r\n      },\r\n      hasUpperCase() {\r\n        return /[A-Z]/.test(this.form.password)\r\n      },\r\n      hasNumber() {\r\n        return /\\d/.test(this.form.password)\r\n      },\r\n      hasMinLength() {\r\n        return this.form.password.length >= 6\r\n      }\r\n    },\r\n    methods: {\r\n      validateField(field) {\r\n        switch (field) {\r\n          case 'username':\r\n            this.errorMessages.username = this.form.username ? '' : '用户名不能为空'\r\n            break\r\n          case 'email':\r\n            this.validateEmail()\r\n            break\r\n          case 'password':\r\n            this.validatePassword()\r\n            this.validateConfirmPassword() // 同时验证确认密码\r\n            break\r\n          case 'confirmPassword':\r\n            this.validateConfirmPassword()\r\n            break\r\n        }\r\n      },\r\n  \r\n      validateEmail() {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n        if (!this.form.email) {\r\n          this.errorMessages.email = '邮箱不能为空'\r\n        } else if (!emailRegex.test(this.form.email)) {\r\n          this.errorMessages.email = '邮箱格式不正确'\r\n        } else {\r\n          this.errorMessages.email = ''\r\n        }\r\n      },\r\n  \r\n      validatePassword() {\r\n        if (!this.form.password) {\r\n          this.errorMessages.password = '密码不能为空'\r\n        } else if (!this.hasLowerCase || !this.hasUpperCase || !this.hasNumber || !this.hasMinLength) {\r\n          this.errorMessages.password = '密码不符合复杂度要求'\r\n        } else {\r\n          this.errorMessages.password = ''\r\n        }\r\n      },\r\n  \r\n      validateConfirmPassword() {\r\n        if (!this.form.confirmPassword) {\r\n          this.errorMessages.confirmPassword = '请确认密码'\r\n        } else if (this.form.password !== this.form.confirmPassword) {\r\n          this.errorMessages.confirmPassword = '两次输入的密码不一致'\r\n        } else {\r\n          this.errorMessages.confirmPassword = ''\r\n        }\r\n      },\r\n  \r\n      validateForm() {\r\n        this.validateField('username')\r\n        this.validateEmail()\r\n        this.validatePassword()\r\n        this.validateConfirmPassword()\r\n  \r\n        return Object.values(this.errorMessages).every(msg => msg === '')\r\n      },\r\n  \r\n      handleRegister() {\r\n        if (this.validateForm()) {\r\n          // 这里可以调用注册API\r\n          console.log('注册信息：', this.form)\r\n          // 示例：跳转到登录页面\r\n          // this.$router.push('/login')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .register-container {\r\n    max-width: 400px;\r\n    margin: 50px auto;\r\n    padding: 30px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  h2 {\r\n    text-align: center;\r\n    color: #333;\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 8px;\r\n    color: #666;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  input:focus {\r\n    outline: none;\r\n    border-color: #409eff;\r\n    box-shadow: 0 0 8px rgba(64, 158, 255, 0.2);\r\n  }\r\n  \r\n  .password-input {\r\n    position: relative;\r\n  }\r\n  \r\n  .toggle-password {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background: none;\r\n    border: none;\r\n    color: #666;\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .password-requirements {\r\n    margin-top: 8px;\r\n    font-size: 12px;\r\n    color: #666;\r\n  }\r\n  \r\n  .password-requirements ul {\r\n    list-style: none;\r\n    padding-left: 20px;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .password-requirements li {\r\n    position: relative;\r\n    color: #f56c6c;\r\n  }\r\n  \r\n  .password-requirements li:before {\r\n    content: '✖';\r\n    position: absolute;\r\n    left: -15px;\r\n  }\r\n  \r\n  .password-requirements li.valid {\r\n    color: #67c23a;\r\n  }\r\n  \r\n  .password-requirements li.valid:before {\r\n    content: '✓';\r\n  }\r\n  \r\n  .submit-btn {\r\n    width: 100%;\r\n    padding: 12px;\r\n    background-color: #67c23a;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .submit-btn:hover {\r\n    background-color: #85ce61;\r\n  }\r\n  \r\n  .error-message {\r\n    color: #f56c6c;\r\n    font-size: 12px;\r\n    margin-top: 5px;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}